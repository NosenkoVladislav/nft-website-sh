{"version":3,"sources":["components/faq/faq.module.css","components/header/header.module.css","candy-machine.ts","components/footer/footer.module.css","components/player/player.module.css","components/content/content.module.css","assets/sol-hub-logo.svg","assets/discord.svg","assets/twitter.svg","components/header/index.tsx","components/footer/index.tsx","components/content/index.tsx","components/faq/index.tsx","assets/player-frame.png","components/player/index.tsx","components/wallet/components/wallet-button.tsx","assets/play.svg","Home.tsx","components/wallet/index.tsx","App.tsx","reportWebVitals.ts","index.tsx","components/wallet/components/wallet-button.module.css"],"names":["module","exports","CANDY_MACHINE_PROGRAM","anchor","PublicKey","SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID","TOKEN_METADATA_PROGRAM_ID","awaitTransactionSignatureConfirmation","txid","timeout","connection","a","commitment","queryStatus","done","status","slot","confirmations","err","subId","Promise","resolve","reject","setTimeout","console","log","onSignature","result","context","e","error","getSignatureStatuses","signatureStatuses","value","sleep","_signatureSubscriptions","removeSignatureListener","createAssociatedTokenAccountInstruction","associatedTokenAddress","payer","walletAddress","splTokenMintAddress","keys","pubkey","isSigner","isWritable","SystemProgram","programId","TOKEN_PROGRAM_ID","SYSVAR_RENT_PUBKEY","TransactionInstruction","data","Buffer","from","getCandyMachineState","anchorWallet","candyMachineId","provider","preflightCommitment","fetchIdl","idl","program","candyMachine","id","account","fetch","state","itemsAvailable","toNumber","itemsRedeemed","itemsRemaining","goLiveDate","Date","getMasterEdition","mint","findProgramAddress","toBuffer","getMetadata","getTokenWallet","wallet","mintOneToken","config","treasury","Keypair","generate","publicKey","token","metadata","masterEdition","getMinimumBalanceForRentExemption","MintLayout","span","rent","rpc","mintNft","accounts","mintAuthority","updateAuthority","tokenMetadataProgram","tokenProgram","systemProgram","clock","SYSVAR_CLOCK_PUBKEY","signers","instructions","createAccount","fromPubkey","newAccountPubkey","space","lamports","Token","createInitMintInstruction","createMintToInstruction","shortenAddress","address","chars","slice","ms","socialLinks","name","img","twitter","url","discord","Header","className","styles","header","container","logo","src","alt","social","map","el","href","target","rel","socialLink","Footer","footer","Content","children","wrapper","faqList","title","text","Faq","section","sectionTitle","faqItem","dangerouslySetInnerHTML","__html","Player","player","playerImage","WalletButton","ConnectButton","styled","WalletDialogButton","CounterText","MintContainer","div","MintButton","Button","renderCounter","days","hours","minutes","seconds","completed","Home","props","useState","balance","setBalance","isActive","setIsActive","isSoldOut","setIsSoldOut","isMinting","setIsMinting","open","message","severity","undefined","alertState","setAlertState","startDate","setStartDate","useWallet","setCandyMachine","onMint","connected","mintTxId","txTimeout","msg","code","indexOf","getBalance","LAMPORTS_PER_SOL","useEffect","signAllTransactions","signTransaction","disabled","onClick","variant","connectButton","CircularProgress","date","onMount","onComplete","renderer","image","play","highlightedText","toBase58","toLocaleString","Snackbar","autoHideDuration","onClose","Alert","notifications","process","Connection","startDateSeed","parseInt","Wallet","endpoint","useMemo","clusterApiUrl","wallets","getPhantomWallet","getSolflareWallet","getSolletWallet","autoConnect","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ebee2b36.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"faq_section__37Pcz\",\"sectionTitle\":\"faq_sectionTitle__VyOnp\",\"faqItem\":\"faq_faqItem__2JRGU\",\"title\":\"faq_title__1dbCF\",\"text\":\"faq_text__1-v-T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__v9FKw\",\"container\":\"header_container__Qg6Mi\",\"logo\":\"header_logo__1X7aW\",\"social\":\"header_social__2_aT-\",\"socialLink\":\"header_socialLink__7OFQl\"};","import * as anchor from \"@project-serum/anchor\";\n\nimport {\n  MintLayout,\n  TOKEN_PROGRAM_ID,\n  Token,\n} from \"@solana/spl-token\";\n\nexport const CANDY_MACHINE_PROGRAM = new anchor.web3.PublicKey(\n  \"cndyAnrLdpjq1Ssp1z8xxDsB8dxe7u4HL5Nxi2K5WXZ\"\n);\n\nconst SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID = new anchor.web3.PublicKey(\n  \"ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL\"\n);\n\nconst TOKEN_METADATA_PROGRAM_ID = new anchor.web3.PublicKey(\n  \"metaqbxxUerdq28cj1RbAWkYQm3ybzjb6a8bt518x1s\"\n);\n\nexport interface CandyMachine {\n  id: anchor.web3.PublicKey,\n  connection: anchor.web3.Connection;\n  program: anchor.Program;\n}\n\ninterface CandyMachineState {\n  candyMachine: CandyMachine;\n  itemsAvailable: number;\n  itemsRedeemed: number;\n  itemsRemaining: number;\n  goLiveDate: Date,\n}\n\nexport const awaitTransactionSignatureConfirmation = async (\n  txid: anchor.web3.TransactionSignature,\n  timeout: number,\n  connection: anchor.web3.Connection,\n  commitment: anchor.web3.Commitment = \"recent\",\n  queryStatus = false\n): Promise<anchor.web3.SignatureStatus | null | void> => {\n  let done = false;\n  let status: anchor.web3.SignatureStatus | null | void = {\n    slot: 0,\n    confirmations: 0,\n    err: null,\n  };\n  let subId = 0;\n  status = await new Promise(async (resolve, reject) => {\n    setTimeout(() => {\n      if (done) {\n        return;\n      }\n      done = true;\n      console.log(\"Rejecting for timeout...\");\n      reject({ timeout: true });\n    }, timeout);\n    try {\n      subId = connection.onSignature(\n        txid,\n        (result: any, context: any) => {\n          done = true;\n          status = {\n            err: result.err,\n            slot: context.slot,\n            confirmations: 0,\n          };\n          if (result.err) {\n            console.log(\"Rejected via websocket\", result.err);\n            reject(status);\n          } else {\n            console.log(\"Resolved via websocket\", result);\n            resolve(status);\n          }\n        },\n        commitment\n      );\n    } catch (e) {\n      done = true;\n      console.error(\"WS error in setup\", txid, e);\n    }\n    while (!done && queryStatus) {\n      // eslint-disable-next-line no-loop-func\n      (async () => {\n        try {\n          const signatureStatuses = await connection.getSignatureStatuses([\n            txid,\n          ]);\n          status = signatureStatuses && signatureStatuses.value[0];\n          if (!done) {\n            if (!status) {\n              console.log(\"REST null result for\", txid, status);\n            } else if (status.err) {\n              console.log(\"REST error for\", txid, status);\n              done = true;\n              reject(status.err);\n            } else if (!status.confirmations) {\n              console.log(\"REST no confirmations for\", txid, status);\n            } else {\n              console.log(\"REST confirmation for\", txid, status);\n              done = true;\n              resolve(status);\n            }\n          }\n        } catch (e) {\n          if (!done) {\n            console.log(\"REST connection error: txid\", txid, e);\n          }\n        }\n      })();\n      await sleep(2000);\n    }\n  });\n\n  //@ts-ignore\n  if (connection._signatureSubscriptions[subId]) {\n    connection.removeSignatureListener(subId);\n  }\n  done = true;\n  console.log(\"Returning status\", status);\n  return status;\n}\n\n/* export */ const createAssociatedTokenAccountInstruction = (\n  associatedTokenAddress: anchor.web3.PublicKey,\n  payer: anchor.web3.PublicKey,\n  walletAddress: anchor.web3.PublicKey,\n  splTokenMintAddress: anchor.web3.PublicKey\n) => {\n  const keys = [\n    { pubkey: payer, isSigner: true, isWritable: true },\n    { pubkey: associatedTokenAddress, isSigner: false, isWritable: true },\n    { pubkey: walletAddress, isSigner: false, isWritable: false },\n    { pubkey: splTokenMintAddress, isSigner: false, isWritable: false },\n    {\n      pubkey: anchor.web3.SystemProgram.programId,\n      isSigner: false,\n      isWritable: false,\n    },\n    { pubkey: TOKEN_PROGRAM_ID, isSigner: false, isWritable: false },\n    {\n      pubkey: anchor.web3.SYSVAR_RENT_PUBKEY,\n      isSigner: false,\n      isWritable: false,\n    },\n  ];\n  return new anchor.web3.TransactionInstruction({\n    keys,\n    programId: SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID,\n    data: Buffer.from([]),\n  });\n}\n\nexport const getCandyMachineState = async (\n  anchorWallet: anchor.Wallet,\n  candyMachineId: anchor.web3.PublicKey,\n  connection: anchor.web3.Connection,\n): Promise<CandyMachineState> => {\n  const provider = new anchor.Provider(connection, anchorWallet, {\n    preflightCommitment: \"recent\",\n  });\n\n  const idl = await anchor.Program.fetchIdl(\n    CANDY_MACHINE_PROGRAM,\n    provider\n  );\n\n  const program = new anchor.Program(idl, CANDY_MACHINE_PROGRAM, provider);\n  const candyMachine = {\n    id: candyMachineId,\n    connection,\n    program,\n  }\n\n  const state: any = await program.account.candyMachine.fetch(candyMachineId);\n  const itemsAvailable = state.data.itemsAvailable.toNumber();\n  const itemsRedeemed = state.itemsRedeemed.toNumber();\n  const itemsRemaining = itemsAvailable - itemsRedeemed;\n\n  // let goLiveDate = state.data.goLiveDate.toNumber();\n  let goLiveDate = new Date( 1000);\n\n  return {\n    candyMachine,\n    itemsAvailable,\n    itemsRedeemed,\n    itemsRemaining,\n    goLiveDate,\n  };\n}\n\nconst getMasterEdition = async (\n  mint: anchor.web3.PublicKey\n): Promise<anchor.web3.PublicKey> => {\n  return (\n    await anchor.web3.PublicKey.findProgramAddress(\n      [\n        Buffer.from(\"metadata\"),\n        TOKEN_METADATA_PROGRAM_ID.toBuffer(),\n        mint.toBuffer(),\n        Buffer.from(\"edition\"),\n      ],\n      TOKEN_METADATA_PROGRAM_ID\n    )\n  )[0];\n};\n\nconst getMetadata = async (\n  mint: anchor.web3.PublicKey\n): Promise<anchor.web3.PublicKey> => {\n  return (\n    await anchor.web3.PublicKey.findProgramAddress(\n      [\n        Buffer.from(\"metadata\"),\n        TOKEN_METADATA_PROGRAM_ID.toBuffer(),\n        mint.toBuffer(),\n      ],\n      TOKEN_METADATA_PROGRAM_ID\n    )\n  )[0];\n};\n\nconst getTokenWallet = async (\n  wallet: anchor.web3.PublicKey,\n  mint: anchor.web3.PublicKey\n) => {\n  return (\n    await anchor.web3.PublicKey.findProgramAddress(\n      [wallet.toBuffer(), TOKEN_PROGRAM_ID.toBuffer(), mint.toBuffer()],\n      SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID\n    )\n  )[0];\n};\n\nexport const mintOneToken = async (\n  candyMachine: CandyMachine,\n  config: anchor.web3.PublicKey, // feels like this should be part of candyMachine?\n  payer: anchor.web3.PublicKey,\n  treasury: anchor.web3.PublicKey,\n): Promise<string> => {\n  const mint = anchor.web3.Keypair.generate();\n  const token = await getTokenWallet(payer, mint.publicKey);\n  const { connection, program } = candyMachine;\n  const metadata = await getMetadata(mint.publicKey);\n  const masterEdition = await getMasterEdition(mint.publicKey);\n\n  const rent = await connection.getMinimumBalanceForRentExemption(\n    MintLayout.span\n  );\n\n  return await program.rpc.mintNft({\n    accounts: {\n      config,\n      candyMachine: candyMachine.id,\n      payer: payer,\n      wallet: treasury,\n      mint: mint.publicKey,\n      metadata,\n      masterEdition,\n      mintAuthority: payer,\n      updateAuthority: payer,\n      tokenMetadataProgram: TOKEN_METADATA_PROGRAM_ID,\n      tokenProgram: TOKEN_PROGRAM_ID,\n      systemProgram: anchor.web3.SystemProgram.programId,\n      rent: anchor.web3.SYSVAR_RENT_PUBKEY,\n      clock: anchor.web3.SYSVAR_CLOCK_PUBKEY,\n    },\n    signers: [mint],\n    instructions: [\n      anchor.web3.SystemProgram.createAccount({\n        fromPubkey: payer,\n        newAccountPubkey: mint.publicKey,\n        space: MintLayout.span,\n        lamports: rent,\n        programId: TOKEN_PROGRAM_ID,\n      }),\n      Token.createInitMintInstruction(\n        TOKEN_PROGRAM_ID,\n        mint.publicKey,\n        0,\n        payer,\n        payer\n      ),\n      createAssociatedTokenAccountInstruction(\n        token,\n        payer,\n        payer,\n        mint.publicKey\n      ),\n      Token.createMintToInstruction(\n        TOKEN_PROGRAM_ID,\n        mint.publicKey,\n        token,\n        payer,\n        [],\n        1\n      ),\n    ],\n  });\n}\n\nexport const shortenAddress = (address: string, chars = 4): string => {\n  return `${address.slice(0, chars)}...${address.slice(-chars)}`;\n};\n\nconst sleep = (ms: number): Promise<void> => {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"footer_footer__1lZIc\",\"social\":\"footer_social__GtHoN\",\"socialLink\":\"footer_socialLink__Xk_PJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"player_wrapper__13WD0\",\"wallet\":\"player_wallet__23ZB0\",\"playerImage\":\"player_playerImage__1bsEt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"content_wrapper__BkmsJ\",\"container\":\"content_container__2vAJL\"};","export default __webpack_public_path__ + \"static/media/sol-hub-logo.121d01c9.svg\";","export default __webpack_public_path__ + \"static/media/discord.78109fd2.svg\";","export default __webpack_public_path__ + \"static/media/twitter.b9febec8.svg\";","import React from \"react\";\n\nimport styles from \"./header.module.css\";\n\nimport logo from \"../../assets/sol-hub-logo.svg\";\nimport discord from \"../../assets/discord.svg\";\nimport twitter from \"../../assets/twitter.svg\";\n\nconst socialLinks = [\n  {\n    id: 0,\n    name: \"Twitter\",\n    img: twitter,\n    url: \"\",\n  },\n  {\n    id: 1,\n    name: \"Discord\",\n    img: discord,\n    url: \"\",\n  },\n];\n\nconst Header = () => {\n  return (\n    <div className={styles.header}>\n      <div className={styles.container}>\n        <img className={styles.logo} src={logo} alt=\"Solana Hub\"/>\n        <div className={styles.social}>\n          {\n            socialLinks.map(el => <a\n              key={el.id}\n              href={el.url}\n              target=\"_blank\"\n              rel=\"nofollow noopener noreferrer\"\n              className={styles.socialLink}\n            ><img src={el.img} alt={el.name}/></a>)\n          }\n        </div>\n      </div>\n    </div>\n  )\n};\n\nexport default Header;","import React from \"react\";\n\nimport styles from \"./footer.module.css\";\n\nimport discord from \"../../assets/discord.svg\";\nimport twitter from \"../../assets/twitter.svg\";\n\nconst socialLinks = [\n  {\n    id: 0,\n    name: \"Twitter\",\n    img: twitter,\n    url: \"\",\n  },\n  {\n    id: 1,\n    name: \"Discord\",\n    img: discord,\n    url: \"\",\n  },\n];\n\nconst Footer = () => {\n  return (\n    <div className={styles.footer}>\n      <div className={styles.social}>\n          {\n            socialLinks.map(el => <a\n              key={el.id}\n              href={el.url}\n              target=\"_blank\"\n              rel=\"nofollow noopener noreferrer\"\n              className={styles.socialLink}\n            ><img src={el.img} alt={el.name}/></a>)\n          }\n      </div>\n    </div>\n  )\n};\n\nexport default Footer;","import React from \"react\";\n\nimport styles from \"./content.module.css\";\n\nconst Content = ({children}: any) => {\n  return (\n    <div className={styles.wrapper}>\n      <div className={styles.container}>\n        {children}\n      </div>\n    </div>\n  )\n};\n\nexport default Content;","import React from \"react\";\n\nimport styles from \"./faq.module.css\";\n\nconst faqList = [\n  {\n    id: 0,\n    title: \"How can I participate in the sale?\",\n    text: `Every whitelisted user can participate in the sale. Whitelisting will take 2 minutes for you, join our Discord server and follow next steps: <a href=\"!!!!!!TODO CHANGE ME!!!!!!!\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Discord</a>`,\n  },\n  {\n    id: 1,\n    title: \"How many SOLANAHUB can I mint?\",\n    text: \"Unlimited.\",\n  },\n  {\n    id: 2,\n    title: \"How much does It cost to mint SOLANAHUB?\",\n    text: \"Just 0.1 SOL\",\n  },\n  {\n    id: 3,\n    title: \"Can I watch this videos?\",\n    text: \"Maybe. But hopefully the community will come up with a way to do It!\",\n  },\n  {\n    id: 4,\n    title: \"How SOLANAHUB are there in total?\",\n    text: \"There are 10,000 SOLANAHUB in total, of which 100 are reserved for the giveaways for community.\",\n  },\n  {\n    id: 5,\n    title: \"Can I make meme with SOLANAHUB?\",\n    text: \"YES! You have to make that! Image what’s going on in the player, share more ideas for title or even record your own videos based on the title ;)\",\n  }\n]\n\nconst Faq = () => {\n  return (\n    <div className={styles.section}>\n      <div className={styles.sectionTitle}>FAQ:</div>\n      <div className={styles.faqList}>\n        {faqList.map(el => {\n          return (\n            <div key={el.id} className={styles.faqItem}>\n              <div className={styles.title}>{el.title}</div>\n              <div className={styles.text} dangerouslySetInnerHTML={{ __html: el.text }}></div>\n            </div>\n          )\n        })}\n      </div>\n    </div>\n  )\n};\n\nexport default Faq;","export default __webpack_public_path__ + \"static/media/player-frame.de3704bc.png\";","import React from \"react\";\n\nimport {Wallet} from \"../../components\";\n\nimport styles from \"./player.module.css\";\n\nimport player from \"../../assets/player-frame.png\";\n\nconst Player = () => {\n  return (\n    <div className={styles.wrapper}>\n      <div className={styles.wallet}>\n        <Wallet/>\n      </div>\n      <div>!!!!TEST!!!!</div>\n      <img src={player} alt=\"Player\" className={styles.playerImage}/>\n    </div>\n  )\n};\n\nexport default Player;","import styles from \"./wallet-button.module.css\";\n\nconst WalletButton = ( { children }: any ) => {\n  return (\n    <div className={styles.wrapper}>\n      {children}\n    </div>\n  )\n};\n\nexport default WalletButton;","export default __webpack_public_path__ + \"static/media/play.48bfad19.svg\";","import { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Countdown from \"react-countdown\";\nimport { Button, CircularProgress, Snackbar } from \"@material-ui/core\";\nimport Alert from \"@material-ui/lab/Alert\";\n\nimport * as anchor from \"@project-serum/anchor\";\n\nimport { LAMPORTS_PER_SOL } from \"@solana/web3.js\";\n\nimport { useWallet } from \"@solana/wallet-adapter-react\";\nimport { WalletDialogButton } from \"@solana/wallet-adapter-material-ui\";\n\nimport WalletButton from \"./components/wallet/components/wallet-button\";\n\nimport {\n  CandyMachine,\n  awaitTransactionSignatureConfirmation,\n  getCandyMachineState,\n  mintOneToken,\n  shortenAddress,\n} from \"./candy-machine\";\n\nimport styles from \"./components/wallet/components/wallet-button.module.css\";\nimport play from \"./assets/play.svg\";\n\n// const btnStyles = \"background-color: #E8963E !important; border-radius: 10px !important;\";\n\nconst ConnectButton = styled(WalletDialogButton)``;\n\nconst CounterText = styled.span``; // add your styles here\n\nconst MintContainer = styled.div``; // add your styles here\n\nconst MintButton = styled(Button)``; // add your styles here\n\nexport interface HomeProps {\n  candyMachineId: anchor.web3.PublicKey;\n  config: anchor.web3.PublicKey;\n  connection: anchor.web3.Connection;\n  startDate: number;\n  treasury: anchor.web3.PublicKey;\n  txTimeout: number;\n}\n\nconst Home = (props: HomeProps) => {\n  const [balance, setBalance] = useState<number>();\n  const [isActive, setIsActive] = useState(false); // true when countdown completes\n  const [isSoldOut, setIsSoldOut] = useState(false); // true when items remaining is zero\n  const [isMinting, setIsMinting] = useState(false); // true when user got to press MINT\n\n  const [alertState, setAlertState] = useState<AlertState>({\n    open: false,\n    message: \"\",\n    severity: undefined,\n  });\n\n  const [startDate, setStartDate] = useState(new Date(props.startDate));\n\n  const wallet = useWallet();\n  const [candyMachine, setCandyMachine] = useState<CandyMachine>();\n\n  const onMint = async () => {\n    try {\n      setIsMinting(true);\n      if (wallet.connected && candyMachine?.program && wallet.publicKey) {\n        const mintTxId = await mintOneToken(\n          candyMachine,\n          props.config,\n          wallet.publicKey,\n          props.treasury\n        );\n\n        const status = await awaitTransactionSignatureConfirmation(\n          mintTxId,\n          props.txTimeout,\n          props.connection,\n          \"singleGossip\",\n          false\n        );\n\n        if (!status?.err) {\n          setAlertState({\n            open: true,\n            message: \"Congratulations! Mint succeeded!\",\n            severity: \"success\",\n          });\n        } else {\n          setAlertState({\n            open: true,\n            message: \"Mint failed! Please try again!\",\n            severity: \"error\",\n          });\n        }\n      }\n    } catch (error: any) {\n      // TODO: blech:\n      let message = error.msg || \"Minting failed! Please try again!\";\n      if (!error.msg) {\n        if (error.message.indexOf(\"0x138\")) {\n        } else if (error.message.indexOf(\"0x137\")) {\n          message = `SOLD OUT!`;\n        } else if (error.message.indexOf(\"0x135\")) {\n          message = `Insufficient funds to mint. Please fund your wallet.`;\n        }\n      } else {\n        if (error.code === 311) {\n          message = `SOLD OUT!`;\n          setIsSoldOut(true);\n        } else if (error.code === 312) {\n          message = `Minting period hasn't started yet.`;\n        }\n      }\n\n      setAlertState({\n        open: true,\n        message,\n        severity: \"error\",\n      });\n    } finally {\n      if (wallet?.publicKey) {\n        const balance = await props.connection.getBalance(wallet?.publicKey);\n        setBalance(balance / LAMPORTS_PER_SOL);\n      }\n      setIsMinting(false);\n    }\n  };\n\n  useEffect(() => {\n    (async () => {\n      if (wallet?.publicKey) {\n        const balance = await props.connection.getBalance(wallet.publicKey);\n        setBalance(balance / LAMPORTS_PER_SOL);\n      }\n    })();\n  }, [wallet, props.connection]);\n\n  useEffect(() => {\n    (async () => {\n      if (\n        !wallet ||\n        !wallet.publicKey ||\n        !wallet.signAllTransactions ||\n        !wallet.signTransaction\n      ) {\n        return;\n      }\n\n      const anchorWallet = {\n        publicKey: wallet.publicKey,\n        signAllTransactions: wallet.signAllTransactions,\n        signTransaction: wallet.signTransaction,\n      } as anchor.Wallet;\n\n      const { candyMachine, goLiveDate, itemsRemaining } =\n        await getCandyMachineState(\n          anchorWallet,\n          props.candyMachineId,\n          props.connection\n        );\n\n      setIsSoldOut(itemsRemaining === 0);\n      setStartDate(goLiveDate);\n      setCandyMachine(candyMachine);\n    })();\n  }, [wallet, props.candyMachineId, props.connection]);\n\n  return (\n    <main>\n      <MintContainer>\n        {!wallet.connected ? (\n          <ConnectButton className={styles.connectButton}>\n            <WalletButton>\n                <img className={styles.image} src={play} alt=\"\"/>\n                <span className={styles.text}>Connect Wallet</span>\n            </WalletButton>\n          </ConnectButton>\n        ) : (\n          <MintButton\n            disabled={isSoldOut || isMinting || !isActive}\n            onClick={onMint}\n            variant=\"contained\"\n            className={styles.connectButton}\n          >\n            {isSoldOut ? (\n              \"SOLD OUT\"\n            ) : isActive ? (\n              isMinting ? (\n                <CircularProgress />\n              ) : (\n                <WalletButton>\n                  <span className={styles.text}>MINT</span>\n                </WalletButton>\n              )\n            ) : (\n              <Countdown\n                date={startDate}\n                onMount={({ completed }) => completed && setIsActive(true)}\n                onComplete={() => setIsActive(true)}\n                renderer={renderCounter}\n              />\n            )}\n          </MintButton>\n        )}\n      </MintContainer>\n      {wallet.connected && (\n        <p className={styles.highlightedText}>Address: {shortenAddress(wallet.publicKey?.toBase58() || \"\")}</p>\n      )}\n\n      {wallet.connected && (\n        <p className={styles.highlightedText}>Balance: {(balance || 0).toLocaleString()} SOL</p>\n      )}\n\n      <Snackbar\n        open={alertState.open}\n        autoHideDuration={6000}\n        onClose={() => setAlertState({ ...alertState, open: false })}\n      >\n        <Alert\n          className={styles.notifications}\n          onClose={() => setAlertState({ ...alertState, open: false })}\n          severity={alertState.severity}\n        >\n          {alertState.message}\n        </Alert>\n      </Snackbar>\n    </main>\n  );\n};\n\ninterface AlertState {\n  open: boolean;\n  message: string;\n  severity: \"success\" | \"info\" | \"warning\" | \"error\" | undefined;\n}\n\nconst renderCounter = ({ days, hours, minutes, seconds, completed }: any) => {\n  return (\n    <CounterText>\n      {hours} hours, {minutes} minutes, {seconds} seconds\n    </CounterText>\n  );\n};\n\nexport default Home;\n","import { useMemo } from \"react\";\n\nimport * as anchor from \"@project-serum/anchor\";\nimport { clusterApiUrl } from \"@solana/web3.js\";\nimport { WalletAdapterNetwork } from \"@solana/wallet-adapter-base\";\nimport {\n  getPhantomWallet,\n  getSolflareWallet,\n  getSolletWallet,\n} from \"@solana/wallet-adapter-wallets\";\n\nimport {\n  ConnectionProvider,\n  WalletProvider,\n} from \"@solana/wallet-adapter-react\";\n\nimport { WalletDialogProvider } from \"@solana/wallet-adapter-material-ui\";\n\nimport Home from \"../../Home\";\n\nconst treasury = new anchor.web3.PublicKey(\n  process.env.REACT_APP_TREASURY_ADDRESS!\n);\n\nconst config = new anchor.web3.PublicKey(\n  process.env.REACT_APP_CANDY_MACHINE_CONFIG!\n);\n\nconst candyMachineId = new anchor.web3.PublicKey(\n  process.env.REACT_APP_CANDY_MACHINE_ID!\n);\n\nconst network = process.env.REACT_APP_SOLANA_NETWORK as WalletAdapterNetwork;\n\nconst rpcHost = process.env.REACT_APP_SOLANA_RPC_HOST!;\nconst connection = new anchor.web3.Connection(rpcHost);\n\nconst startDateSeed = parseInt(process.env.REACT_APP_CANDY_START_DATE!, 10);\n\nconst txTimeout = 30000; // milliseconds (confirm this works for your project)\n\nconst Wallet = () => {\n  const endpoint = useMemo(() => clusterApiUrl(network), []);\n\n  const wallets = useMemo(\n    () => [getPhantomWallet(), getSolflareWallet(), getSolletWallet()],\n    []\n  );\n  return (\n    <ConnectionProvider endpoint={endpoint}>\n      <WalletProvider wallets={wallets} autoConnect>\n        <WalletDialogProvider>\n          <Home\n            candyMachineId={candyMachineId}\n            config={config}\n            connection={connection}\n            startDate={startDateSeed}\n            treasury={treasury}\n            txTimeout={txTimeout}\n          />\n        </WalletDialogProvider>\n      </WalletProvider>\n    </ConnectionProvider>\n  )\n};\n\nexport default Wallet;\n","import \"./App.css\";\n\nimport { Header, Footer, Content, Faq, Player } from \"./components\";\n\nconst App = () => {\n  return (\n    <>\n      <Header/>\n      <Content>\n        <Player/>\n        <Faq/>\n      </Content>\n      <Footer/>\n    </>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"wallet-button_wrapper__3GPap\",\"image\":\"wallet-button_image__2HMaf\",\"text\":\"wallet-button_text__2B9sr\",\"connectButton\":\"wallet-button_connectButton__OCHlk\",\"highlightedText\":\"wallet-button_highlightedText__3Jn8P\",\"notifications\":\"wallet-button_notifications__2hn0k\"};"],"sourceRoot":""}